from flask import Flask
import json
app = Flask(__name__)

def sanitize(string):
    banned = ['.', ',', '-']
    san = string.lower()
    
    i = 0
    while (i < len(san)):
        if san[i] in banned:
            san = san[:i] + san[i+1:]
        else:
            i += 1
            
    return san

def alias(string):
  a = {'cough':['coughing'],'congestion':['runny','stuffy','nose']}
  rstr = string.split(' ')
  for word in rstr:
    for s in a:
      for alias in a:
        rstr.replace(alias,s)

def insertSort(listDictionary):
    newDict = {}
    listDict = list(listDictionary)

    for index in range(1,len(listDict)):
        
        
        currentvalue = listDict[index]
        position = index
        
        while position > 0 and listDictionary[listDict[position-1]] > listDictionary[currentvalue]:
            
        
            listDict[position] = listDict[position-1]
            
            position = position - 1

        listDict[position] = currentvalue  
        
    listDict.reverse()
    for i in listDict:
      newDict[i] = listDictionary[i]
    return newDict


# s = {"cold":[('cough',5)]}

d = {'congestion': [('cold', 0.6), ('pink eye', 0.1), ('flu', 0.6)], 'muscle pain': [('cold', 1), ('flu', 1)], 'cough': [('cold', 1), ('asthma', 0.1), ('bronchitis', 0.1), ('flu', 0.5), ('pneumonia', 0.2)], 'fatigue': [('cold', 1), ('chicken pox', 0.3), ('HIV/AIDS', 0.05), ('bronchitis', 0.1), ('flu', 1.4), ('pneumonia', 0.3), ('food poisoning', 0.5), ('concussion', 0.1)], 'fever': [('cold', 0.7), ('strep throat', 0.4), ('stomach flu', 0.6), ('chicken pox', 0.1), ('HIV/AIDS', 0.1), ('flu', 1), ('pneumonia', 0.4), ('food poisoning', 0.4), ('appendicitis', 0.1)], 'sore throat': [('strep throat', 1), ('chicken pox', 0.1), ('HIV/AIDS', 0.1), ('bronchitis', 0.2)], 'swollen lymph nodes': [('cold', 0.1), ('strep throat', 0.1), ('chicken pox', 0.1), ('HIV/AIDS', 0.1), ('flu', 0.1)], 'pain while swallowing': [('strep throat', 1), ('HIV/AIDS', 0.01)], 'swollen tonsils': [('strep throat', 1)], 'red eyes': [('pink eye', 2)], 'diarrhea': [('stomach flu', 1), ('HIV/AIDS', 0.1), ('lactose intolerance', 0.1), ('food poisoning', 1), ('appendicitis', 0.3)], 'cramps': [('stomach flu', 0.1), ('lactose intolerance', 0.1), ('food poisoning', 0.1)], 'vomiting': [('strep throat', 0.1), ('stomach flu', 2), ('HIV/AIDS', 0.1), ('food poisoning', 2), ('appendicitis', 0.1), ('concussion', 0.1)], 'pain in abdomen': [('stomach flu', 0.1), ('HIV/AIDS', 0.1), ('lactose intolerance', 0.1), ('food poisoning', 0.1), ('appendicitis', 0.1)], 'blister scab': [('chicken pox', 2)], 'chest pain': [('asthma', 0.1), ('cold', 1), ('bronchitis', 0.5), ('pneumonia', 0.1)], 'pain during exercise': [('asthma', 0.1)], 'weight loss': [('stomach flu', 0.1), ('HIV/AIDS', 0.1)], 'ulcers': [('chicken pox', 1), ('HIV/AIDS', 1)], 'red blotches': [('HIV/AIDS', 5)], 'bloating': [('lactose intolerance', 0.1), ('food poisoning', 0.1)], 'head congestion': [('flu', 2)], 'indigestion': [('lactose intolerance', 0.1), ('stomach flu', 0.5), ('food poisoning', 0.1)], 'coordination loss': [('concussion', 5)], 'blackout': [('concussion', 5)]}
dlist = ["cold","flu"]
for thing in d:
  if not d[thing][0][0] in dlist:
    for i in range(len(d[thing])):
      dlist.append(d[thing][i][0])
print("dlist" + str(dlist))

@app.route('/api/<data>')
def match(data):
    data = sanitize(data)
    realdata = data.split(' ')
    print(realdata)
    probs = {}
    for dis in dlist:
      probs[dis] = 0.0
    print(probs)
    for symp in realdata:
      try:
        try:
          daps = d[symp]
        except:
          for pdaps in d:
            pdl = pdaps.split(" ")
            for term in pdl:
              if term == symp:
                daps = d[pdaps]
        for possibledisease in daps:
          probs[possibledisease[0]] += possibledisease[1]
          print(probs[possibledisease[0]])
          print("added {} to {}".format(possibledisease[1],possibledisease[0]))
        print(symp)
      except:
        pass
    for p in list(probs):
      if probs[p] == 0.0:
        del probs[p]
    print(probs)
    return json.dumps(insertSort(probs))

@app.route('/')
def main():
    return """

      <!-- Compiled and minified CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-rc.2/css/materialize.min.css">

    <!-- Compiled and minified JavaScript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-rc.2/js/materialize.min.js"></script>

    <style>
    body{

    }
    #wholepage {
      padding:0px;
      background-color:rgba(255,255,255,0.5);
      border-radius:40px;
      width:100%;
      height:100%;
      overflow:scroll;
    }

    a{
      width:100%
    }
    #result{
      padding:30px
    }
    #content{
      padding:30px
    }
    ::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */
    color: rgb(100,100,100);
    opacity: 1; /* Firefox */
}
    </style>

    <script>



    function scrollTo(element, to, duration) {
    var start = element.scrollTop,
        change = to - start,
        currentTime = 0,
        increment = 20;
        
    var animateScroll = function(){        
        currentTime += increment;
        var val = Math.easeInOutQuad(currentTime, start, change, duration);
        element.scrollTop = val;
        if(currentTime < duration) {
            setTimeout(animateScroll, increment);
        }
    };
    animateScroll();
}

    function show(i){
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
          objresp = JSON.parse(this.responseText);
          
          sortedresp = []
           document.getElementById('rl').innerHTML = ''
          var hsf = 'None'
          var hsfv = 0
          for (var t in objresp) {
            if (objresp[t] > hsfv) {
              hsf = t
              hsfv = objresp[t]
            }
          }
          document.getElementById('dit').innerHTML = 'You Probably Have: ' + hsf
          
          for (var key in objresp) {
            if (!objresp.hasOwnProperty(key)) continue;
            if (key == hsf) {continue};

            document.getElementById('rl').innerHTML += ('<li class="collection-item">'+key+'</li>');
            document.getElementById('result').style.display='block';
          }
          document.getElementById('googles').href = 'https://www.google.com/?q='+hsf
    }
  };
  xhttp.open("GET", "api/"+document.getElementById('field').value, true);
  xhttp.send();
    }

    </script>
<div id=wholepage>
<nav>
    <div class="nav-wrapper">
      <a href="#" class="brand-logo center blue darken-4" style='font-size:24px'>Describe Your Symptoms</a>
      
    </div>
  </nav>    
  <div id='content'>
  <textarea type='text' class="materialize-textarea" id='field' placeholder='ex: I have congestion and a bad cough' onsubmit=show(document.getElementById("field").value)'></textarea>
    <a class="waves-effect waves-light btn blue darken-3" onclick='show(document.getElementById("field").value)' width=100%>Submit</a>
    <br>
    <div id='result' style='display:none;'>
    <div class="row">
    <div class="col s12">
      <div class="card">
        <div class="card-content">
          <span class="card-title" id='dit'>Card Title</span>
          <p>This is the most likely cause of your symptoms</p>
        </div>
        <div class="card-action">
          <a id="googles" class='text-blue text-darken-5' href="#" target="_blank">More Info</a>
        </div>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col s12">
      <div class="card">
        <div class="card-content">
          <span class="card-title">You could also have</span>
          <ul class="collection" id='rl'>
    </ul>
        </div>
      </div>
    </div>
  </div>

    
    </div>
    </div>
    </div>
    """

if __name__ == '__main__':
  app.run(host='0.0.0.0', port=8080)